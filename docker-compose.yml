version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-message-service
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: message_db
      MYSQL_ROOT_HOST: '%'  # Permite conexiones desde cualquier host
      TZ: UTC  # Establece zona horaria
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    command: 
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --wait_timeout=28800
      --interactive_timeout=28800
      --connect_timeout=60
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-message-service
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    container_name: mongodb-message-service
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  messagepublisher:
    build:
      context: ./messagepublisher
    container_name: messagepublisher-service
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-message-service:3306/message_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_RABBITMQ_HOST: rabbitmq-message-service
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    restart: unless-stopped
    volumes:
      - .:/app

  messageconsumer:
    build:
      context: ./messageconsumer
    container_name: messageconsumer-service
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq-message-service
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_DATA_MONGODB_URI: mongodb://mongodb-message-service:27017/message_db
    restart: unless-stopped

volumes:
  mysql_data:
  rabbitmq_data:
  mongodb_data:
